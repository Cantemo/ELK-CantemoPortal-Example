filter {
  if [type] == "nginx-access" {
    grok {
      match => { "message" => "%{NGINXACCESS} \"(?<proxypassedip>[\w\d\.\-]+)\" rt=%{NUMBER:requesttime} uct=\"%{NUMBER:upstreamconnecttime}\" uht=\"%{NUMBER:upstreamheadertime}\" urt=\"%{NUMBER:upstreamresponsetime}\"" }
      match => { "message" => "%{NGINXACCESS}" }
    }
    mutate {
      convert => ["response", "integer"]
      convert => ["bytes", "integer"]
      convert => ["requesttime", "float"]
      convert => ["upstreamconnecttime", "float"]
      convert => ["upstreamheadertime", "float"]
      convert => ["upstreamresponsetime", "float"]
    }
    geoip {
      source => "clientip"
      target => "geoip"
      add_tag => [ "nginx-geoip" ]
    }
  } else if [type] == "nginx-error" {
    grok {
      match => { "message" => "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}(?:, client: (?<clientip>%{IP}|%{HOSTNAME}))(?:, server: ?(%{IPORHOST:server})?)(?:, request: %{QS:request})?(?:, upstream: \"%{URI:upstream}\")?(?:, host: %{QS:host})?(?:, referrer: \"%{URI:referrer}\")?" }
    }
    geoip {
      source => "clientip"
      target => "geoip"
      add_tag => [ "nginx-geoip" ]
    }
    date {
      match => [ "timestamp" , "YYYY/MM/dd HH:mm:ss" ]
      remove_field => [ "timestamp" ]
    }
  }
}
